module questions (
    input clk,  // clock
    input rst,  // reset
    input answer[16],  // user's answer
    
    output io_seg[8],
    output io_sel[4]
  ) {
  var a;
  var b;
  var ans;
    
  .clk(clk){
    .rst(rst){
      fsm game = {
        MUL1, MUL2, MUL3, MUL4, MUL5, MUL6, MUL7, MUL8,
        DONE};
      multi_seven_seg seg;
    }
  }
    
  always {
    // default values
    seg.values = {5b00000, 5b00000, 5b00000, 5b00000};
    io_seg = 0;
    io_sel = 0;
    
        
    // multiplying tests
    case (game.q) {
      game.MUL1:
        a = 16b0000000000000010;  // 02
        b = 16b0000000000000011;  // 03
        ans = 16b0000000000000110;  // 06
        seg.values = {5b00000, 5b01011, 5b00000, 5b00011};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL2;
        }
          
      game.MUL2:
        a = 16b0000000000001101;  // 13
        b = 16b0000000000000010;  // 02
        ans = 16b0000000000011010;  //26
        seg.values = {5b00001, 5b01110, 5b00000, 5b00010};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL3;
        }
        
      game.MUL3:
        a = 16b0000000000000011;  // 03
        b = 16b0000000000000100;  // 04
        ans = 16b0000000000001100;  // 12
        seg.values = {5b00000, 5b01110, 5b00000, 5b00100};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL4;
        }
        
      game.MUL4:
        a = 16b0000000000101101;  // 45
        b = 16b0000000000000010;  // 02
        ans = 16b0000000001011010;  // 90
        seg.values = {5b00100, 5b01111, 5b00000, 5b00010};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL5;
        }
        
      game.MUL5:
        a = 16b0000000000100011;  // 35
        b = 16b0000000000000101;  // 05
        ans = 16b0000000010101111;  // 175
        seg.values = {5b00011, 5b01111, 5b00000, 5b00101};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL6;
        }
        
      game.MUL6:
        a = 16b0000000000000010;  // 02
        b = 16b0000000001001110;  // 78
        ans = 16b0000000010011100;  // 156
        seg.values = {5b00000, 5b01011, 5b10101, 5b10100};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL7;
        }
        
      game.MUL7:
        a = 16b0000000000011010;  // 26
        b = 16b0000000000000100;  // 04
        ans = 16b0000000001101000;  // 104
        seg.values = {5b00010, 5b00110, 5b00000, 5b00100};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.MUL8;
        }
        
        
      game.MUL8:
        a = 16b0000000000101001;  // 41
        b = 16b0000000000001010;  // 10
        ans = 16b00000000110011010;  // 410
        seg.values = {5b00100, 5b01010, 5b00001, 5b00000};
        io_seg = seg.seg;
        io_sel = seg.sel;
        
        if (answer == ans) {
          game.d = game.DONE;
        }
        
       
      // all tests correct
      game.DONE:
        seg.values = {5b10111, 5b11000, 5b11000, 5b11001};
        io_seg = seg.seg;
        io_sel = seg.sel;
    }
}